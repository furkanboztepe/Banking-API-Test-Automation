name: Banking API CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  JAVA_VERSION: '11'
  MAVEN_OPTS: -Xmx1024m

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: 'maven'
    
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Build with Maven
      run: mvn clean compile
    
    - name: Run Tests
      run: mvn test
    
    - name: Generate Coverage Report
      run: mvn jacoco:report
    
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: target/surefire-reports/
    
    - name: Upload Coverage Report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: target/site/jacoco/
    
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Maven Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit
        fail-on-error: true

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: 'maven'
    
    - name: Run Maven Verify
      run: mvn verify

  security-scan:
    name: Security Vulnerability Check
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
    
    - name: OWASP Dependency Check
      run: |
        mvn org.owasp:dependency-check-maven:check || true
    
    - name: Upload Security Report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: security-report
        path: target/dependency-check-report.html

  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build-and-test, code-quality, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
    
    - name: Build JAR
      run: mvn package -DskipTests
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: banking-api-jar
        path: target/*.jar
    
    - name: Deploy to Staging
      run: |
        echo "Deploying to staging environment..."
        echo "In real scenario: Deploy to AWS, Docker registry, etc."

  smoke-tests:
    name: Smoke Tests
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Run Smoke Tests
      run: |
        echo "Running smoke tests on staging..."
        echo "Check if application is up and running"
        echo "Test critical paths"

  notify:
    name: Send Notification
    runs-on: ubuntu-latest
    needs: [build-and-test, code-quality, security-scan]
    if: always()
    
    steps:
    - name: Check Status
      run: |
        echo "Pipeline Status: ${{ job.status }}"
        echo "In real scenario: Send Slack/Email notification"
